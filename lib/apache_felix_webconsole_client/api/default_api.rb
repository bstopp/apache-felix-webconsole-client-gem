=begin
Apache Felix WebConsole

Client for Apache Felix Web Console API. List bundles, configure services, etc.

OpenAPI spec version: 4.3.0
Contact: bryan.stopp@gmail.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require "uri"

module ApacheFelix
  class DefaultApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Bundle Info
    # Display all information about a bundle. Same response structure as bundle listing; only one entry exists in the list.
    # @param bundle_id The symbolic name or id of the bundle.
    # @param [Hash] opts the optional parameters
    # @return [BundleList]
    def bundle_info(bundle_id, opts = {})
      data, _status_code, _headers = bundle_info_with_http_info(bundle_id, opts)
      return data
    end

    # Bundle Info
    # Display all information about a bundle. Same response structure as bundle listing; only one entry exists in the list.
    # @param bundle_id The symbolic name or id of the bundle.
    # @param [Hash] opts the optional parameters
    # @return [Array<(BundleList, Fixnum, Hash)>] BundleList data, response status code and response headers
    def bundle_info_with_http_info(bundle_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: DefaultApi.bundle_info ..."
      end
      # verify the required parameter 'bundle_id' is set
      fail ArgumentError, "Missing the required parameter 'bundle_id' when calling DefaultApi.bundle_info" if bundle_id.nil?
      # resource path
      local_var_path = "/bundles/{bundleId}.json".sub('{format}','json').sub('{' + 'bundleId' + '}', bundle_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['basic']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BundleList')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DefaultApi#bundle_info\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List bundles
    # List all the bundles in the Felix system. Properties for a bundle will not be populated.
    # @param [Hash] opts the optional parameters
    # @return [BundleList]
    def bundles(opts = {})
      data, _status_code, _headers = bundles_with_http_info(opts)
      return data
    end

    # List bundles
    # List all the bundles in the Felix system. Properties for a bundle will not be populated.
    # @param [Hash] opts the optional parameters
    # @return [Array<(BundleList, Fixnum, Hash)>] BundleList data, response status code and response headers
    def bundles_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: DefaultApi.bundles ..."
      end
      # resource path
      local_var_path = "/bundles.json".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['basic']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BundleList')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DefaultApi#bundles\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
